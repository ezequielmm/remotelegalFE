name: Deploy to UAT

on:
    release:
        types: [created]
        branches:
            - uat

jobs:
    build-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Cache node modules
              id: yarn-cache
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Install Dependencies
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn install

            - name: Getting appropriate ENV file
              uses: canastro/copy-file-action@master
              with:
                  source: ./env/.env.uat
                  target: .env

            - name: Build
              run: yarn build
            - name: Test
              run: CI=true yarn test
            - name: Upload publish to GitHub Store
              uses: actions/upload-artifact@master
              with:
                  name: publish-build
                  path: ./build

    pack-deploy:
        runs-on: ubuntu-latest
        needs: [build-test]
        if: contains('
            refs/tags/uat
            refs/heads/uat
            ', github.ref)
        steps:
            - uses: actions/checkout@v2
            - name: Getting appropriate ENV file
              uses: canastro/copy-file-action@master
              with:
                  source: ./env/.env.uat
                  target: .env

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1
            - name: Download publish from GitHub Store
              uses: actions/download-artifact@master
              with:
                  name: publish-build
                  path: ./build

            - name: Extract Bucket & CloudFront Distribution Id for UAT
              shell: bash
              env:
                  DIST: ${{ secrets.DISTRIBUTION_UAT }}
              run: |
                  echo "DISTRIBUTION=$DIST" >> $GITHUB_ENV
                  echo "BUCKET=prp-fe-uat" >> $GITHUB_ENV
            - name: Upload publish to S3
              run: |
                  aws s3 sync ./build s3://$BUCKET --delete
                  aws cloudfront create-invalidation --distribution-id $DISTRIBUTION --paths "/"
