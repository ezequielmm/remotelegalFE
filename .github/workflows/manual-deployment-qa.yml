name: Manual Deployment to QA

on:
    workflow_dispatch:

jobs:
    build-test:
        runs-on: ubuntu-latest
        env:
          CLEAN_NODE_MODULES: ${{ secrets.CLEAN_NODE_MODULES }}
          ENABLE_CACHE: secrets.ENABLE_CACHE
        steps:
            - uses: actions/checkout@v2
            - name: Cache node modules
              if: ${{ env.ENABLE_CACHE == 'true' }}
              id: yarn-cache
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Remove node_modules
              if: ${{ env.CLEAN_NODE_MODULES == 'true' }}
              run: rm -rf node_modules

            - uses: webfactory/ssh-agent@v0.4.1
              with:
                ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1
            
            - name: Install Dependencies
              if: ${{ env.ENABLE_CACHE != 'true' && steps.yarn-cache.outputs.cache-hit != 'true' }}
              run: sh yarn-install.sh

            - name: Getting appropriate ENV file
              uses: canastro/copy-file-action@master
              with:
                  source: ./env/.env.qa
                  target: .env

            - name: Prebuild
              run: |
                COMMIT_HASH=$(git rev-parse HEAD)
                CONTENT="{\"version\": \"$COMMIT_HASH\"}"
                rm latest.json
                echo $CONTENT >> latest.json
                yarn prebuild                  

            - name: Build
              run: ESLINT_NO_DEV_ERRORS=true DISABLE_ESLINT_PLUGIN=true yarn build
            - name: Test
              run: CI=true yarn test
            - name: Upload publish to GitHub Store
              uses: actions/upload-artifact@master
              with:
                  name: publish-build
                  path: ./build
                  retention-days: 1

    pack-deploy:
        runs-on: ubuntu-latest
        needs: [build-test]
        steps:
            - uses: actions/checkout@v2

            - name: Getting appropriate ENV file
              uses: canastro/copy-file-action@master
              with:
                  source: ./env/.env.qa
                  target: .env

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1
            - name: Download publish from GitHub Store
              uses: actions/download-artifact@master
              with:
                  name: publish-build
                  path: ./build

            - name: Extract Bucket & CloudFront Distribution Id for QA
              shell: bash
              env:
                  DIST: ${{ secrets.DISTRIBUTION_QA }}
              run: |
                  echo "DISTRIBUTION=$DIST" >> $GITHUB_ENV
                  echo "BUCKET=prp-fe-qa" >> $GITHUB_ENV

            - name: Upload publish to S3
              run: |
                  aws s3 sync ./build s3://$BUCKET --metadata-directive REPLACE --cache-control 'max-age=86400,must-revalidate,public' --delete
                  aws cloudfront create-invalidation --distribution-id $DISTRIBUTION --paths "/*"
